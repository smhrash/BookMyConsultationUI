{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vksag\\\\Downloads\\\\BookMyConsultationUIF\\\\BookMyConsultationUI\\\\src\\\\screens\\\\login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport \"./Login.css\";\nimport { Input, FormHelperText, FormControl, Button, SnackBar, InputLabel, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setErrorForEmail] = useState(false);\n  const [passwordError, setErrorForPassword] = useState(false);\n  const [invalidEmail, setInvalidEmail] = useState(false);\n  const {\n    dispatch\n  } = useContext(AuthContext);\n  const loginURL = \"http://localhost:8080/auth/login\";\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleLogin = e => {\n    if (e) e.preventDefault();\n\n    //use this flag to set to true/false then call the API only if true\n    // this flag will be set to false if the email/password is invalid\n    let flag = true;\n    const encodedEmailAndPassword = window.btoa(`${email}:${password}`);\n    const emailPattern = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\\\.,;:\\s@\"]{2,})$/i;\n\n    //check for email and password blank\n    email === \"\" ? setErrorForEmail(true) : setErrorForEmail(false);\n    password === \"\" ? setErrorForPassword(true) : setErrorForPassword(false);\n    if (!email.match(pattern)) {\n      setInvalidEmail(true);\n      flag = false;\n    } else {\n      setInvalidEmail(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"standard\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"email\",\n          type: \"email\",\n          onChange: handleEmailChange,\n          value: email,\n          error: emailError,\n          helperText: emailError && \"Please fill out this field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: email.length >= 1 && invalidEmail === true && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            id: \"invalid-error\",\n            children: \"Enter Valid Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"standard\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"password\",\n          type: \"password\",\n          onChange: handlePasswordChange,\n          value: password,\n          error: passwordError,\n          helperText: passwordError && \"Please fill out this field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"wi4ZVE81hI9mcMG48yvC+wFiQzo=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","Input","FormHelperText","FormControl","Button","SnackBar","InputLabel","TextField","useState","AuthContext","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","emailError","setErrorForEmail","passwordError","setErrorForPassword","invalidEmail","setInvalidEmail","dispatch","loginURL","handleEmailChange","e","target","value","handlePasswordChange","handleLogin","preventDefault","flag","encodedEmailAndPassword","window","btoa","emailPattern","match","pattern","className","children","autoComplete","onSubmit","variant","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","error","helperText","length","color","_c","$RefreshReg$"],"sources":["C:/Users/vksag/Downloads/BookMyConsultationUIF/BookMyConsultationUI/src/screens/login/Login.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport \"./Login.css\";\r\nimport {\r\n  Input,\r\n  FormHelperText,\r\n  FormControl,\r\n  Button,\r\n  SnackBar,\r\n  InputLabel,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [emailError, setErrorForEmail] = useState(false);\r\n  const [passwordError, setErrorForPassword] = useState(false);\r\n\r\n  const [invalidEmail, setInvalidEmail] = useState(false);\r\n\r\n  const { dispatch } = useContext(AuthContext);\r\n\r\n  const loginURL = \"http://localhost:8080/auth/login\";\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    if (e) e.preventDefault();\r\n\r\n    //use this flag to set to true/false then call the API only if true\r\n    // this flag will be set to false if the email/password is invalid\r\n    let flag = true;\r\n\r\n    const encodedEmailAndPassword = window.btoa(`${email}:${password}`);\r\n\r\n    const emailPattern =\r\n      /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\\\.,;:\\s@\"]{2,})$/i;\r\n\r\n    //check for email and password blank\r\n    email === \"\" ? setErrorForEmail(true) : setErrorForEmail(false);\r\n    password === \"\" ? setErrorForPassword(true) : setErrorForPassword(false);\r\n\r\n    if (!email.match(pattern)) {\r\n      setInvalidEmail(true);\r\n      flag = false;\r\n    } else {\r\n      setInvalidEmail(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form autoComplete=\"off\" onSubmit={handleLogin}>\r\n        <FormControl variant=\"standard\">\r\n          <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            id=\"email\"\r\n            type=\"email\"\r\n            onChange={handleEmailChange}\r\n            value={email}\r\n            error={emailError}\r\n            helperText={emailError && \"Please fill out this field\"}\r\n          />\r\n          <div>\r\n            {email.length >= 1 && invalidEmail === true && (\r\n              <FormHelperText id=\"invalid-error\">\r\n                Enter Valid Email\r\n              </FormHelperText>\r\n            )}\r\n          </div>\r\n        </FormControl>\r\n        <br />\r\n        <br />\r\n        <FormControl variant=\"standard\">\r\n          <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n          <Input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            onChange={handlePasswordChange}\r\n            value={password}\r\n            error={passwordError}\r\n            helperText={passwordError && \"Please fill out this field\"}\r\n          />\r\n        </FormControl>\r\n        <br />\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          LOGIN\r\n        </Button>\r\n      </form>\r\n      {/* <br />\r\n        <br />\r\n        <FormControl variant=\"standard\">\r\n          <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n          <Input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            onChange={handlePasswordChange}\r\n            value={password}\r\n          ></Input>\r\n        </FormControl>\r\n        <br />\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          LOGIN\r\n        </Button>\r\n      </form> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}